Source: golang
Section: devel
Priority: optional
Maintainer: Ondřej Surý <ondrej@debian.org>
Vcs-Browser: https://alioth.debian.org/plugins/scmgit/cgi-bin/gitweb.cgi?p=pkg-google/golang.git
Vcs-Git: git://scm.alioth.debian.org/git/pkg-google/golang.git
Build-Depends: debhelper (>= 7.4.10), bison, ed, mawk | awk, perl
Standards-Version: 3.9.2
Homepage: http://golang.org/

Package: golang-go
Architecture: i386 amd64 kfreebsd-i386 kfreebsd-amd64 armel armhf
Depends: ${shlibs:Depends}, ${misc:Depends}, ${perl:Depends}
Recommends: golang-tools
Provides: go-compiler
Description: Go programming language compiler
 This package provides assembler, compiler and linker for the Go
 programming language.  This is the Google's Go implementation of the
 tool chain.
 .
 The Go programming language is an open source project to make
 programmers more productive. Go is expressive, concise, clean, and
 efficient.  Its concurrency mechanisms make it easy to write programs
 that get the most out of multicore and networked machines, while its
 novel type system enables flexible and modular program construction.
 Go compiles quickly to machine code yet has the convenience of
 garbage collection and the power of run-time reflection.  It's a
 fast, statically typed, compiled language that feels like a
 dynamically typed, interpreted language.

Package: golang-src
Architecture: i386 amd64 kfreebsd-i386 kfreebsd-amd64 armel armhf
Depends: ${shlibs:Depends}, ${misc:Depends}, golang-go
Recommends: golang-tools
Description: Go programming language compiler (.go source files)
 This package provides the source files for the Go programming
 language needed for godoc and goinstall.
 .
 The Go programming language is an open source project to make
 programmers more productive. Go is expressive, concise, clean, and
 efficient.  Its concurrency mechanisms make it easy to write programs
 that get the most out of multicore and networked machines, while its
 novel type system enables flexible and modular program construction.
 Go compiles quickly to machine code yet has the convenience of
 garbage collection and the power of run-time reflection.  It's a
 fast, statically typed, compiled language that feels like a
 dynamically typed, interpreted language.

Package: golang-doc
Architecture: all
Depends: ${misc:Depends}
Section: doc
Description: Documentation for Google's Go programming language
 This package provides the documentation for the Go programming
 language.
 .
 The Go programming language is an open source project to make
 programmers more productive. Go is expressive, concise, clean, and
 efficient.  Its concurrency mechanisms make it easy to write programs
 that get the most out of multicore and networked machines, while its
 novel type system enables flexible and modular program construction.
 Go compiles quickly to machine code yet has the convenience of
 garbage collection and the power of run-time reflection.  It's a
 fast, statically typed, compiled language that feels like a
 dynamically typed, interpreted language.
 .
 After installing golang-tools package, you can view a nicely
 formatted documentation by running godoc --http=:6060 and then
 visiting http://localhost:6060/doc/install.html.
 .
 TODO: Pregenerate HTML documentation to /usr/share/doc/golang-doc/html

Package: golang-tools
Architecture: i386 amd64 kfreebsd-i386 kfreebsd-amd64 armel armhf
Depends: golang-go, ${shlibs:Depends}, ${misc:Depends}
Recommends: golang-src
Description: Tools for Google's Go programming language
 This package provides various tools for the Go programming language:
  * godoc - extracts and generates documentation for Go programs
  * gofix - upgrade Go programs to the most recent release
  * gofmt - formats Go programs
  * goinstall - automatic package installation
  * gotry - evaluate expressions on the command line
  * govet - simple checking of Go source code
 .
 The Go programming language is an open source project to make
 programmers more productive. Go is expressive, concise, clean, and
 efficient.  Its concurrency mechanisms make it easy to write programs
 that get the most out of multicore and networked machines, while its
 novel type system enables flexible and modular program construction.
 Go compiles quickly to machine code yet has the convenience of
 garbage collection and the power of run-time reflection.  It's a
 fast, statically typed, compiled language that feels like a
 dynamically typed, interpreted language.

Package: golang-mode
Architecture: all
Depends: ${misc:Depends}, emacs23 | emacsen
Suggests: golang-go
Description: Go mode for GNU Emacs
 Provides a major mode for GNU Emacs to edit programs written in Google's
 Go programming language.

Package: kate-syntax-go
Architecture: all
Depends: ${misc:Depends}, kate
Suggests: golang-go
Description: Syntax files to highlight Go in Kate editor
 Provides a syntax highlighting for the Kate editor to edit programs
 written in Google's Go programming language.

Package: vim-syntax-go
Architecture: all
Depends: ${misc:Depends}, vim
Recommends: vim-addon-manager
Suggests: golang-go
Description: Syntax files to highlight Go in vim
 Provides a syntax highlighting for vim editor to edit programs
 written in Google's Go programming language.

Package: golang-dbg
Architecture: i386 amd64 kfreebsd-i386 kfreebsd-amd64 armel armhf
Depends: ${misc:Depends}, golang-go (= ${binary:Version})
Recommends: gdb
Section: debug
Priority: extra
Description: Go programming language tool chain [debug]
 This package provides the debug symbols for the Google's Go tool
 chain binaries (assembler, compiler, linker) needed for properly
 debugging errors in the tool chain with gdb.

Package: golang
Depends: ${misc:Depends},
	 golang-go (>= ${source:Version}),
         golang-src (>= ${source:Version}),
         golang-tools (>= ${source:Version})
Architecture: all
Description: Go programming language [meta package]
 This package is a metapackage that, when installed, guarantees
 that (almost) full Go development environment is installed.
 .
 The Go programming language is an open source project to make
 programmers more productive. Go is expressive, concise, clean, and
 efficient.  Its concurrency mechanisms make it easy to write programs
 that get the most out of multicore and networked machines, while its
 novel type system enables flexible and modular program construction.
 Go compiles quickly to machine code yet has the convenience of
 garbage collection and the power of run-time reflection.  It's a
 fast, statically typed, compiled language that feels like a
 dynamically typed, interpreted language.
