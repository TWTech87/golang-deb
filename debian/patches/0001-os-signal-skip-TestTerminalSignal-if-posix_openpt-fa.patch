From 7a71efa01fb8486b879b3abee8364a7aa4e401fe Mon Sep 17 00:00:00 2001
From: Michael Hudson-Doyle <michael.hudson@canonical.com>
Date: Wed, 31 Jan 2018 10:27:49 +1300
Subject: [PATCH] os/signal: skip TestTerminalSignal if posix_openpt fails with
 EACCES

This happens in a chroot and so causes failures when packaging Go 1.10 for
Debian/Ubuntu.

Change-Id: I817038c237e584ce185b2168f8c7a10b9ef27b43
---
 src/os/signal/internal/pty/pty.go | 21 ++++++++++++++++++---
 src/os/signal/signal_cgo_test.go  |  4 ++++
 2 files changed, 22 insertions(+), 3 deletions(-)

--- a/src/os/signal/internal/pty/pty.go
+++ b/src/os/signal/internal/pty/pty.go
@@ -21,21 +21,36 @@
 import (
 	"fmt"
 	"os"
+	"syscall"
 )
 
+type PtyError struct {
+	FuncName    string
+	ErrorString string
+	Errno       syscall.Errno
+}
+
+func ptyError(name string, err error) *PtyError {
+	return &PtyError{name, err.Error(), err.(syscall.Errno)}
+}
+
+func (e *PtyError) Error() string {
+	return fmt.Sprintf("%s: %s", e.FuncName, e.ErrorString)
+}
+
 // Open returns a master pty and the name of the linked slave tty.
 func Open() (master *os.File, slave string, err error) {
 	m, err := C.posix_openpt(C.O_RDWR)
 	if err != nil {
-		return nil, "", fmt.Errorf("posix_openpt: %v", err)
+		return nil, "", ptyError("posix_openpt", err)
 	}
 	if _, err := C.grantpt(m); err != nil {
 		C.close(m)
-		return nil, "", fmt.Errorf("grantpt: %v", err)
+		return nil, "", ptyError("grantpt", err)
 	}
 	if _, err := C.unlockpt(m); err != nil {
 		C.close(m)
-		return nil, "", fmt.Errorf("unlockpt: %v", err)
+		return nil, "", ptyError("unlockpt", err)
 	}
 	slave = C.GoString(C.ptsname(m))
 	return os.NewFile(uintptr(m), "pty-master"), slave, nil
--- a/src/os/signal/signal_cgo_test.go
+++ b/src/os/signal/signal_cgo_test.go
@@ -72,6 +72,10 @@
 
 	master, sname, err := pty.Open()
 	if err != nil {
+		ptyErr := err.(*pty.PtyError)
+		if ptyErr.FuncName == "posix_openpt" && ptyErr.Errno == syscall.EACCES {
+			t.Skip("posix_openpt failed with EACCES, assuming chroot and skipping")
+		}
 		t.Fatal(err)
 	}
 	defer master.Close()
--- a/src/go/build/deps_test.go
+++ b/src/go/build/deps_test.go
@@ -301,7 +301,7 @@
 	"os/user": {"L4", "CGO", "io/ioutil", "os", "syscall"},
 
 	// Internal package used only for testing.
-	"os/signal/internal/pty": {"CGO", "fmt", "os"},
+	"os/signal/internal/pty": {"CGO", "fmt", "os", "syscall"},
 
 	// Basic networking.
 	// Because net must be used by any package that wants to
